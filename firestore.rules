rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Admins can read/write all user data
    // Users can only read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isAdmin();
    }
    
    match /users/{document=**} {
      allow list: if isAdmin();
    }

    // Users can only query/write their own watchlist items
    match /watchlist/{docId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow list: if request.auth != null && request.query.where.path == "userId" && request.query.where.op == "==" && request.query.where.value == request.auth.uid;
    }
    
    // Users can only read/write their own alerts
    match /alerts/{document=**} {
       allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Public read for news, scanners, and feature flags
    match /news_feed/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /scanners/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /data_sources/{document=**} {
      allow read, write: if isAdmin();
    }
    
    match /feature_flags/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Admin only for prompts, logs, and test writes
    match /prompts/{document=**} {
      allow read, write: if isAdmin();
    }
    
     match /logs/{document=**} {
      allow read, write: if isAdmin();
    }

    match /test_writes/{document=**} {
        allow read, write: if isAdmin();
    }
  }
}
