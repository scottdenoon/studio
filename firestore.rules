
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- Collections ---

    // Users: Users can only read/update their own profile. Only admins can create/delete.
    match /users/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create, delete: if isAdmin();
    }
    
    // News Feed: Publicly readable, only admins can manage.
    match /news_feed/{newsId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Watchlist: Users can only manage their own watchlist items.
    match /watchlist/{itemId} {
      allow read, write: if isOwner(resource.data.userId);
    }
    
    // Alerts: Users can only manage their own alerts.
    match /alerts/{alertId} {
        allow read, write: if isOwner(resource.data.userId);
    }

    // Scanners: Publicly readable, only admins can manage.
    match /scanners/{scannerId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Prompts: Readable by authenticated users, only admins can manage.
    match /prompts/{promptId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Data Sources: Readable by authenticated users, only admins can manage.
    match /data_sources/{sourceId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }

    // Feature Flags: Publicly readable, only admins can manage.
    match /feature_flags/{flagId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // Logs & Test Writes: Only accessible by admins.
    match /logs/{logId} {
      allow read, write: if isAdmin();
    }
    match /test_writes/{testId} {
      allow read, write: if isAdmin();
    }
  }
}
