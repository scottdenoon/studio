rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }
    match /watchlist/{document=**} {
      allow read: if request.auth.uid == resource.data.userId;
      allow list: if request.auth.uid == request.query.where.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow delete: if request.auth.uid == resource.data.userId;
    }
     match /trade_journal/{document=**} {
      allow read, list: if request.auth.uid == request.query.where.userId || request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth.uid == resource.data.userId;
    }
    match /news_feed/{document=**} {
      allow read, list: if request.auth != null;
      allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
     match /news_sources/{document=**} {
      allow read, list: if request.auth != null;
      allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /prompts/{document=**} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /scanners/{document=**} {
       allow read, list: if request.auth != null;
       allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
     match /data_sources/{document=**} {
       allow read, list: if request.auth != null;
       allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /feature_flags/{document=**} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /logs/{document=**} {
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      // Allow server-side writes
      allow create: if request.auth == null;
    }
    match /test_writes/{document=**} {
        // Allow server-side writes
        allow create: if request.auth == null;
    }
  }
}
